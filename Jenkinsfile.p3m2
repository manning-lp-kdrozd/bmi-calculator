pipeline {
    agent any

    stages {        
        stage('Build') {
            agent {
                docker { image 'node:16.13.1-alpine' }
            }
            steps {
                sh 'node --version'
                sh 'CI=true npm install'
                sh 'CI=true npm run build'
            }
            post {
                success {
                    echo 'Build succeeded!'
                    zip zipFile: 'build.zip', archive: false, dir: 'build', overwrite: true
                    stash name: 'mybmicalc', allowEmpty: false, includes: 'build.zip'
                    // disabled - too much noise
                    // slackSend channel: '#kdmicalcpipeline', color: 'good', message: "bmi calc artifacts stashed :)"
                }
            }
        }
        stage('Docker image') { 
            steps {

                // some block, this should use public DockerHub by default
                script{
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                        unstash 'mybmicalc'
                        unzip dir: 'build', glob: '', zipFile: 'build.zip'
                        docker.build('krzysiekdrozd/bmicalc').push('latest')
                    }
                }
            } 
        }
        stage('Scan with Trivy') {
            agent {
                docker {
                    image 'aquasec/trivy:latest'
                    args "--entrypoint='--cache-dir=.'"
                }
            }           
            steps {
                sh 'trivy image krzysiekdrozd/bmicalc:latest'
                recordIssues(tools: [trivy(pattern: 'results.json')])
            }
        }
    }
}
